@use "../../styles/variables";
@use "../../styles/mixins";
@use "../../styles/drawer-panel-mixins" as drawerPanel;

:host {
  @include drawerPanel.drawer-panel-width;
  position: relative;
  display: flex;
  flex-direction: column;
  border-left: 1px solid variables.$grey-02;
  box-shadow:
    -2px 0px 4px -1px rgba(0, 0, 0, 0.03),
    -4px 0px 4px 0px rgba(0, 0, 0, 0.05);
}

%bar {
  flex: 0 0 3rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
  background-color: variables.$white;
  padding: 16px;
  height: 64px;
}

.header {
  @extend %bar;
  border-bottom: 1px solid variables.$grey-02;

  &__title {
    font-weight: variables.$font-bold;
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
  }
}

.footer {
  @extend %bar;
  border-top: 1px solid variables.$grey-02;
  justify-content: flex-end;
  box-shadow:
    0px -2px 4px -1px rgba(0, 0, 0, 0.03),
    0px -4px 4px 0px rgba(0, 0, 0, 0.05);
}

.loading-spinner {
  position: absolute;
  inset: 0;
  z-index: 100;
  display: grid;
  place-items: center;
  background-color: variables.$grey-03;
}

.asset-detail-scroll-container {
  overflow-y: auto;
  overflow-x: hidden;
}

.close-button {
  justify-content: flex-end;
}

.asset-detail {
  min-height: calc(100% - 3rem);
  padding: 16px;
  overflow-wrap: anywhere;
  display: flex;
  flex-direction: column;
  gap: 16px;

  &__general {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 8px;
  }
}

table.asset-details {
  table-layout: fixed;
  width: 100%;
  min-width: 100%;
  max-width: 100%;

  // Add space between each of the table's rows.
  border-collapse: separate;
  border-spacing: 0 6px;

  tr:first-child {
    th:nth-child(1) {
      $width: 10rem;
      width: $width;
      min-width: $width;
      max-width: $width;
    }
  }

  th {
    overflow-wrap: break-word;
    vertical-align: top;
    font-weight: unset;
    text-align: left;
    padding-right: 0.5rem;

    &.icon-height {
      line-height: 2.5rem;
    }
  }
}

td,
th {
  padding: 0.125rem 0;
  vertical-align: unset;
  overflow-wrap: break-word;
}

td .line {
  & + span.line {
    padding-top: 0.125rem;
  }
}

.title-original {
  padding-bottom: 1rem;
}

.creation-date {
  padding-bottom: 1rem;
}

table.status-works {
  table-layout: fixed;
  border-collapse: separate;
  border-spacing: 0 0.125rem;
  width: 100%;
  min-width: 100%;
  max-width: 100%;

  tr:first-child {
    th:nth-child(1) {
      $width: 7rem;
      width: $width;
      min-width: $width;
      max-width: $width;
    }
  }

  th {
    overflow-wrap: break-word;
    vertical-align: unset;
    font-weight: unset;
    text-align: unset;
  }
}

ul {
  padding: 0;
  margin: 0;
  list-style: none;

  &.single-entry {
    list-style-type: none;
  }
}

li > * {
  vertical-align: top;
}

li::marker {
  color: variables.$grey-06;
}

li.link {
  display: inline-flex;
  width: 100%;
  overflow: visible;
  align-items: center;
  flex-wrap: wrap;
  column-gap: 6px;

  &:not(:first-child) {
    margin-top: 6px;
  }

  a {
    flex: 0 0 2.5rem;
  }

  a:first-of-type {
    margin-left: 0.5rem;
  }
}

// A list of languages to which an asset is mapped.
ul.languages {
  display: flex;
  flex-wrap: wrap;
  list-style: none;

  & > li {
    display: flex;
    flex-wrap: nowrap;
  }

  // Insert commas between every two languages.
  & > li:not(:last-child)::after {
    content: ",\00a0";
  }
}

.chip-group {
  display: flex;
  flex-wrap: wrap;
  gap: 6px 6px;

  &--vertical {
    flex-direction: column;
  }
}

.col-2 {
  display: grid;
  grid-template-columns: 1fr 1fr;
  width: 100%;
  gap: 12px;
}

.divider {
  width: 100%;
  border: 1px solid var(--sgc-color-border--default);
}

dl {
  margin: 0;
}

dt {
  color: var(--sgc-color-text--disabled);
}

dd {
  margin: 0;
}

.reference-link {
  display: flex;
  align-items: center;
  gap: 12px;
  color: variables.$cyan-09;
  text-align: left;

  > :first-child {
    flex: 0 0 auto;
  }

  > :last-child {
    flex: 1;
  }
}

sgc-card {
  font-size: var(--sgc-typo-body-2-medium--size);
  line-height: var(--sgc-typo-body-2-medium--line-height);
  font-weight: var(--sgc-typo-body-2-medium--weight);
  letter-spacing: var(--sgc-typo-body-2-medium--letter-spacing);
}

.mat-tooltip {
  white-space: pre-line;
}
